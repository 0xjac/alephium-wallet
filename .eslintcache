[{"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/index.tsx":"1","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/serviceWorker.js":"2","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/App.tsx":"3","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/style/globalStyles.ts":"4","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/style/themes.ts":"5","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/Home.tsx":"6","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/InfoBox.tsx":"7","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/Inputs.tsx":"8","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/Buttons.tsx":"9","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/Paragraph.tsx":"10","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/CreateAccount.tsx":"11","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/index.tsx":"12","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/WalletWords.tsx":"13","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/PageComponents.tsx":"14","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/CheckWordsIntro.tsx":"15","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/CheckWords.tsx":"16"},{"size":1230,"mtime":1619191236978,"results":"17","hashOfConfig":"18"},{"size":5767,"mtime":1619191236983,"results":"19","hashOfConfig":"18"},{"size":1933,"mtime":1619191236971,"results":"20","hashOfConfig":"18"},{"size":610,"mtime":1619191236986,"results":"21","hashOfConfig":"18"},{"size":463,"mtime":1619192034511,"results":"22","hashOfConfig":"18"},{"size":6807,"mtime":1619191236982,"results":"23","hashOfConfig":"18"},{"size":1148,"mtime":1619191236972,"results":"24","hashOfConfig":"18"},{"size":6787,"mtime":1619191236973,"results":"25","hashOfConfig":"18"},{"size":2032,"mtime":1619191236971,"results":"26","hashOfConfig":"18"},{"size":582,"mtime":1619191236974,"results":"27","hashOfConfig":"18"},{"size":3983,"mtime":1619191236980,"results":"28","hashOfConfig":"18"},{"size":2623,"mtime":1619191694575,"results":"29","hashOfConfig":"18"},{"size":1996,"mtime":1619192763207,"results":"30","hashOfConfig":"18"},{"size":2418,"mtime":1619191236973,"results":"31","hashOfConfig":"18"},{"size":2406,"mtime":1619191236980,"results":"32","hashOfConfig":"18"},{"size":8039,"mtime":1619191522041,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"16bwc0h",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/index.tsx",[],[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/serviceWorker.js",[],[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/App.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/style/globalStyles.ts",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/style/themes.ts",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/Home.tsx",["70"],"import React, { useCallback, useContext, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { ReactComponent as TreesSVG } from '../images/trees.svg'\nimport { ReactComponent as MountainSVG } from '../images/mountain.svg'\nimport { motion } from 'framer-motion'\nimport { Input, Select } from '../components/Inputs'\nimport { Button } from '../components/Buttons'\nimport tinycolor from 'tinycolor2'\nimport { PageContainer, ContentContainer, PageTitle, SectionContent } from '../components/PageComponents'\nimport { useHistory } from 'react-router'\nimport Paragraph from '../components/Paragraph'\nimport { walletOpen, Storage } from 'alf-client'\nimport { NetworkTypeString } from '../types'\nimport { GlobalContext } from '../App'\n\ninterface HomeProps {\n  hasWallet: boolean\n  usernames: string[]\n  networkType: NetworkTypeString\n}\n\nconst Home = ({ hasWallet, usernames, networkType }: HomeProps) => {\n  const [showActions, setShowActions] = useState(false)\n\n  const renderActions = () => <InitialActions hasWallet={hasWallet} setShowActions={setShowActions} />\n\n  return (\n    <PageContainer>\n      <Header>\n        <ContentContainer>\n          <HeaderText>\n            <PageTitle color=\"contrast\">Hi there!</PageTitle>\n            <h3>Welcome to the Alephium Wallet!</h3>\n            <p>Use the smart money of the future while keeping your mind at ease.</p>\n          </HeaderText>\n          <Moon initial={{ bottom: '-2vh' }} animate={{ bottom: '10vh' }} transition={{ delay: 0.2, duration: 1.2 }} />\n          <CloudGroup\n            coordinates={[\n              ['10px', '0px'],\n              ['0px', '15px'],\n              ['15px', '30px']\n            ]}\n            lengths={['30px', '20px', '25px']}\n            style={{ bottom: '2vh' }}\n            distance=\"10px\"\n            side=\"left\"\n          />\n          <CloudGroup\n            coordinates={[\n              ['10px', '0px'],\n              ['20px', '15px'],\n              ['55px', '30px']\n            ]}\n            lengths={['30px', '40px', '25px']}\n            style={{ top: '3vh' }}\n            distance=\"20px\"\n            side=\"right\"\n          />\n          <MountainImage />\n        </ContentContainer>\n      </Header>\n      <InteractionArea>\n        <ContentContainer>\n          {showActions ? (\n            renderActions()\n          ) : hasWallet ? (\n            <Login setShowActions={setShowActions} usernames={usernames} networkType={networkType} />\n          ) : (\n            renderActions()\n          )}\n          <TreesImage />\n        </ContentContainer>\n      </InteractionArea>\n    </PageContainer>\n  )\n}\n\n// === Components\n\nconst Login = ({\n  usernames,\n  networkType,\n  setShowActions\n}: {\n  usernames: string[]\n  networkType: NetworkTypeString\n  setShowActions: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const [credentials, setCredentials] = useState({ username: '', password: '' })\n  const { setWallet } = useContext(GlobalContext)\n\n  const login = async () => {\n    const walletEncrypted = Storage().load(credentials.username)\n    if (walletEncrypted === null) {\n      alert('User not found.')\n    } else {\n      try {\n        const wallet = await walletOpen(credentials.password, walletEncrypted, networkType)\n        setWallet(wallet)\n      } catch (e) {\n        alert('Invalid password.')\n        throw e\n      }\n    }\n  }\n\n  const handleCredentialsChange = (type: 'username' | 'password', value: string) => {\n    setCredentials((prev) => ({ ...prev, [type]: value }))\n  }\n\n  const handleLogin = () => {\n    login()\n    // TODO: Redirect!\n  }\n\n  console.log(credentials)\n\n  return (\n    <SectionContent>\n      <Select\n        placeholder=\"Username\"\n        options={usernames.map((u) => ({ label: u, value: u }))}\n        onValueChange={(value) => handleCredentialsChange('username', value?.value || '')}\n      />\n      <Input\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(e) => handleCredentialsChange('password', e.target.value)}\n        value={credentials.password}\n      />\n      <Button onClick={handleLogin}>Login</Button>\n      <SwitchLink onClick={() => setShowActions(true)}>Create / import a new wallet</SwitchLink>\n    </SectionContent>\n  )\n}\n\nconst InitialActions = ({\n  hasWallet,\n  setShowActions\n}: {\n  hasWallet: boolean\n  setShowActions: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const history = useHistory()\n\n  const handleClick = () => {\n    history.push('/create')\n  }\n\n  return (\n    <SectionContent style={{ marginTop: '2vh' }}>\n      <Button onClick={handleClick}>New wallet</Button>\n      <Button>Import wallet</Button>\n      {hasWallet && <SwitchLink onClick={() => setShowActions(false)}>Use an existing account</SwitchLink>}\n    </SectionContent>\n  )\n}\n\n// === Styling\n\nconst Header = styled.header`\n  flex: 1;\n  background-color: ${({ theme }) => theme.bg.contrast};\n  position: relative;\n  overflow: hidden;\n`\n\nconst InteractionArea = styled.div`\n  flex: 0.8;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`\n\nconst HeaderText = styled.div`\n  margin-top: 2vh;\n  max-width: 700px;\n  color: ${({ theme }) => theme.font.contrast};\n`\n\nconst Moon = styled(motion.div)`\n  position: absolute;\n  right: 6vw;\n  height: 15vw;\n  width: 15vw;\n  max-height: 80px;\n  max-width: 80px;\n  border-radius: 200px;\n  background-color: ${({ theme }) => theme.global.accent};\n`\n\nconst MountainImage = styled(MountainSVG)`\n  position: absolute;\n  width: 100%;\n  height: 40%;\n  bottom: -2px;\n`\n\nconst TreesImage = styled(TreesSVG)`\n  position: absolute;\n  bottom: 3vh;\n  left: 5vw;\n  width: 50vw;\n  height: 100px;\n  max-width: 300px;\n  z-index: -1;\n\n  path {\n    stroke: ${({ theme }) => theme.font.primary};\n    stroke-width: 3px;\n  }\n`\n\nconst CloudGroup = ({\n  coordinates,\n  lengths,\n  side,\n  distance,\n  style\n}: {\n  coordinates: [string, string][]\n  lengths: string[]\n  side: 'right' | 'left'\n  distance: string\n  style?: React.CSSProperties | undefined\n}) => {\n  const clouds = []\n\n  for (let i = 0; i < coordinates.length; i++) {\n    clouds.push(<Cloud key={i} style={{ left: coordinates[i][0], top: coordinates[i][1], width: lengths[i] }} />)\n  }\n\n  return (\n    <StyledCloudGroup\n      initial={{ [side]: '-100px' }}\n      animate={{ [side]: distance }}\n      transition={{ delay: 0.1, duration: 0.5 }}\n      style={style}\n    >\n      {clouds}\n    </StyledCloudGroup>\n  )\n}\n\nconst StyledCloudGroup = styled(motion.div)`\n  height: 50px;\n  width: 100px;\n  position: absolute;\n`\n\nconst Cloud = styled.div`\n  position: absolute;\n  background-color: ${({ theme }) => tinycolor(theme.bg.primary).setAlpha(0.9).toString()};\n  height: 3px;\n`\n\nconst SwitchLink = styled(Paragraph)`\n  color: ${({ theme }) => theme.global.accent};\n  background-color: ${({ theme }) => theme.bg.primary};\n  padding: 5px;\n`\n\nexport default Home\n","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/InfoBox.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/Inputs.tsx",["71"],"import { AnimatePresence, HTMLMotionProps, motion, Variants } from 'framer-motion'\nimport styled from 'styled-components'\nimport tinycolor from 'tinycolor2'\nimport classNames from 'classnames'\nimport { useState, ChangeEvent, useRef, useEffect } from 'react'\nimport { FiCheck, FiChevronDown } from 'react-icons/fi'\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  error?: string\n  isValid?: boolean\n  disabled?: boolean\n}\n\nconst variants: Variants = {\n  hidden: { y: 10, opacity: 0 },\n  shown: (disabled) => ({ y: 0, opacity: disabled ? 0.5 : 1 }),\n  disabled: { y: 0, opacity: 0.5 }\n}\n\nconst placeHolderVariants: Variants = {\n  up: { y: -35, scale: 0.8 },\n  down: { y: 0, scale: 1 }\n}\n\nexport const Input = ({\n  placeholder,\n  error,\n  isValid,\n  disabled,\n  onChange,\n  value: initialValue,\n  ...props\n}: InputProps) => {\n  const [canBeAnimated, setCanBeAnimated] = useState(false)\n  const [value, setValue] = useState(initialValue)\n\n  const className = classNames({\n    error,\n    isValid\n  })\n\n  const handleValueChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    onChange && onChange(e)\n    setValue(e.target.value)\n  }\n\n  return (\n    <InputContainer\n      variants={variants}\n      animate={canBeAnimated ? (!disabled ? 'shown' : 'disabled') : false}\n      onAnimationComplete={() => setCanBeAnimated(true)}\n      custom={disabled}\n    >\n      <Label variants={placeHolderVariants} animate={!value ? 'down' : 'up'}>\n        {placeholder}\n      </Label>\n      <StyledInput {...props} value={value} onChange={handleValueChange} className={className} disabled={disabled} />\n      {!disabled && isValid && (\n        <ValidIconContainer initial={{ y: 10, opacity: 0 }} animate={{ y: 0, opacity: 1 }}>\n          <FiCheck strokeWidth={3} />\n        </ValidIconContainer>\n      )}\n      {!disabled && error && <ErrorMessage animate={{ y: 10, opacity: 1 }}>{error}</ErrorMessage>}\n    </InputContainer>\n  )\n}\n\n// === SELECT === //\n\ninterface SelectOption {\n  value: string\n  label: string\n}\n\ninterface SelectProps extends HTMLMotionProps<'select'> {\n  initialValue?: SelectOption\n  options: SelectOption[]\n  onValueChange: (value: SelectOption | undefined) => void\n}\n\nexport const Select = ({ options, placeholder, disabled, initialValue, className, onValueChange }: SelectProps) => {\n  const [canBeAnimated, setCanBeAnimated] = useState(false)\n  const [value, setValue] = useState(initialValue)\n  const [showPopup, setShowPopup] = useState(false)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  // If only one value, select it\n  if (!value && options.length === 1) {\n    setValue(options[0])\n  }\n\n  useEffect(() => {\n    // Set value in input\n    if (inputRef.current && value) {\n      inputRef.current.value = value.label\n      onValueChange(value)\n    }\n  }, [value])\n\n  return (\n    <>\n      <InputContainer\n        variants={variants}\n        animate={canBeAnimated ? (!disabled ? 'shown' : 'disabled') : false}\n        onAnimationComplete={() => setCanBeAnimated(true)}\n        custom={disabled}\n        onClick={() => setShowPopup(true)}\n      >\n        <Label variants={placeHolderVariants} animate={!value ? 'down' : 'up'}>\n          {placeholder}\n        </Label>\n        <Chevron>\n          <FiChevronDown />\n        </Chevron>\n        <StyledInput type=\"button\" className={className} ref={inputRef} disabled={disabled} />\n      </InputContainer>\n      <AnimatePresence>\n        {showPopup && (\n          <SelectOptionsPopup\n            options={options}\n            setValue={setValue}\n            handleBackgroundClick={() => {\n              setShowPopup(false)\n            }}\n          />\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n\nconst SelectOptionsPopup = ({\n  options,\n  setValue,\n  handleBackgroundClick\n}: {\n  options: SelectOption[]\n  setValue: React.Dispatch<React.SetStateAction<{ value: string; label: string } | undefined>>\n  handleBackgroundClick: () => void\n}) => {\n  const handleOptionSelect = (value: SelectOption) => {\n    setValue(value)\n    handleBackgroundClick()\n  }\n\n  return (\n    <PopupContainer\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: 10 }}\n      onClick={() => {\n        handleBackgroundClick()\n      }}\n    >\n      <Popup\n        onClick={(e) => {\n          e.stopPropagation()\n        }}\n      >\n        {options.map((o) => (\n          <OptionItem key={o.value} onClick={() => handleOptionSelect(o)}>\n            {o.label}\n          </OptionItem>\n        ))}\n      </Popup>\n    </PopupContainer>\n  )\n}\n\n// === Styling\n\nconst InputContainer = styled(motion.div)`\n  position: relative;\n  height: 50px;\n  width: 100%;\n  margin: 17px 0;\n`\n\nconst Label = styled(motion.label)`\n  position: absolute;\n  top: 15px;\n  left: 18px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.font.secondary};\n`\n\nconst ErrorMessage = styled(motion.label)<InputProps>`\n  position: absolute;\n  bottom: -10px;\n  right: 10px;\n  font-weight: 600;\n  opacity: 0;\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.global.alert};\n`\n\nconst ValidIconContainer = styled(motion.div)`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 20px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.global.valid};\n`\n\nconst StyledInput = styled.input<InputProps>`\n  background-image: none;\n  height: 50px;\n  width: 100%;\n  border-radius: 100px;\n  background-color: ${({ theme }) => theme.bg.secondary};\n  border: 3px solid ${({ theme }) => theme.border.primary};\n  padding: 0 15px;\n  font-weight: 600;\n  font-size: 1em;\n  text-align: left;\n\n  transition: 0.2s ease-out;\n\n  &:focus {\n    background-color: ${({ theme }) => theme.bg.primary};\n    border: 3px solid ${({ theme }) => theme.global.accent};\n  }\n\n  &.error {\n    border: 3px solid ${({ theme }) => theme.global.alert};\n    background-color: ${({ theme }) => tinycolor(theme.global.alert).setAlpha(0.1).toString()};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.bg.secondary};\n    border: 3px solid ${({ theme }) => theme.border.primary};\n  }\n`\n\nconst Chevron = styled.div`\n  position: absolute;\n  font-size: 1.3rem;\n  top: 16px;\n  right: 18px;\n  color: ${({ theme }) => theme.font.secondary};\n`\n\nconst PopupContainer = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n`\n\nconst Popup = styled.div`\n  background-color: ${({ theme }) => theme.bg.primary};\n  border-radius: 14px;\n  margin: auto;\n  width: 30vw;\n  min-width: 300px;\n  max-height: 500px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`\n\nconst OptionItem = styled.div`\n  padding: 15px;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${({ theme }) => theme.border.primary};\n  }\n`\n","/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/Buttons.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/Paragraph.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/CreateAccount.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/index.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/WalletWords.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/components/PageComponents.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/CheckWordsIntro.tsx",[],"/Users/mika/Documents/Projects/Alephium/alephium-wallet/src/pages/CreateWallet/CheckWords.tsx",["72"],{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":98,"column":6,"nodeType":"79","endLine":98,"endColumn":13,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":60,"column":23,"nodeType":"75","messageId":"76","endLine":60,"endColumn":38},"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onValueChange'. Either include it or remove the dependency array. If 'onValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"'_currentElement' is assigned a value but never used.",{"desc":"83","fix":"84"},"Update the dependencies array to be: [onValueChange, value]",{"range":"85","text":"86"},[2801,2808],"[onValueChange, value]"]